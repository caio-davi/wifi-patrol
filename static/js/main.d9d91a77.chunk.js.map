{"version":3,"sources":["compopnents/LeafletMap.jsx","compopnents/RouterPanel.jsx","compopnents/SimulationOptions.jsx","routersList.js","compopnents/App.jsx","utils.js","index.js"],"names":["LeafletMap","props","patrolIcon","L","icon","iconUrl","iconAnchor","iconSize","popupAnchor","intruderIcon","showRadius","position","color","Circle","radius","center","Map","zoom","TileLayer","url","attribution","markers","i","routers","push","Marker","patrol","intruder","status","RouterPanel","className","name","list","key","router","style","width","height","backgroundColor","cloned","marginLeft","border","SimulationOptions","onClick","toogleShowRadius","toogleIntruder","resetWifi","App","getRandom","min","max","Math","random","intruderPosition","target","floor","lat","lng","direction","step","React","useState","showSimulationOptions","setShowSimulationOptions","setPatrol","setIntruder","setShowRadius","setCloned","updatePosition","newTarget","stepCounter","patrolDirection","toRadians","degrees","PI","distance","position1","position2","lat1","lat2","latDiff","lngDiff","a","sin","cos","atan2","sqrt","setTimeout","allSignals","clone","obj","copy","Date","setTime","getTime","Array","len","length","Object","attr","hasOwnProperty","Error","getRouterPosition","signals","listenNow","signalPosition","routerPosition","measuredDistance","routerDistance","checkWifi","size","newIntruder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9d91a77.chunk.js","sourcesContent":["import React from \"react\";\nimport { Map, Marker, TileLayer, Circle } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nconst LeafletMap = props => {\n  var patrolIcon = L.icon({\n    iconUrl:\n      \"https://corruptionbycops.com/wp-content/uploads/2019/06/civilian-blue-police-groups.fw_.png\",\n    iconAnchor: [15, 15],\n    iconSize: [40, 40],\n    popupAnchor: [0, 0]\n  });\n\n  var intruderIcon = L.icon({\n    iconUrl: \"https://i.ya-webdesign.com/images/anonymous-png-icon-16.png\",\n    iconSize: [40, 40],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, 0]\n  });\n\n  const Patrol = () => {\n    const position = [props.patrol[\"lat\"], props.patrol[\"lng\"]];\n    return (\n      <div>\n        <Marker position={position} icon={patrolIcon}></Marker>\n      </div>\n    );\n  };\n\n  const showRadius = (position, color) => {\n    return props.showRadius ? (\n      <Circle radius={35} center={position} color={color} />\n    ) : (\n      \"\"\n    );\n  };\n\n  const Intruder = () => {\n    if (props.intruder.status) {\n      const position = [props.intruder[\"lat\"], props.intruder[\"lng\"]];\n      return (\n        <div>\n          {showRadius(position, props.intruder.color)}\n          <Marker position={position} icon={intruderIcon}></Marker>\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n\n  const RouterMarkers = () => {\n    let markers = [];\n    for (let i in props.routers) {\n      const position = [props.routers[i][\"lat\"], props.routers[i][\"lng\"]];\n      markers.push(\n        <div>\n          {showRadius(position, props.routers[i][\"color\"])}\n          <Marker position={position}></Marker>\n        </div>\n      );\n    }\n    return markers;\n  };\n\n  return (\n    <Map center={props.center} zoom={19}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <RouterMarkers />\n      <Patrol />\n      <Intruder />\n    </Map>\n  );\n};\nexport default LeafletMap;\n","import React from 'react';\nimport '../styles/RouterPanel.css'\n\nconst RouterPanel = (props) => {\n\n  const RouterList = () => {\n    let list = [];\n\n    const label = (name) => {\n      const color = name===props.cloned ? 'red' : 'Chartreuse';\n      return {\n        width: 15,\n        height: 15,\n        backgroundColor: color,\n        marginLeft: 15,\n        border:'1px solid black',\n      };\n    };\n\n    for(let key in props.routers){\n      const router = props.routers[key];\n      list.push(\n        <div className='Router'>\n          <div>\n            <canvas style={label(router.name)}/>\n          </div>\n          <div>\n            {router.name}\n\n          </div>\n        </div>\n      )\n    }\n    return list;\n  };\n\n\n  return  (\n            <div className='List'>\n              <RouterList />\n            </div>\n          );\n};\n\nexport default RouterPanel;\n","import React from \"react\";\nimport { MDBBtn } from \"mdbreact\";\nimport \"../styles/SimulationOptions.css\";\n\nconst SimulationOptions = props => {\n  \n  return (\n    <div className='btnList'>\n      <MDBBtn color=\"deep-purple\" onClick={() => props.toogleShowRadius()}>\n        Wifi Ranges\n      </MDBBtn>\n      <MDBBtn color=\"deep-purple\" onClick={() => props.toogleIntruder()}>\n        Intruder\n      </MDBBtn>\n      <MDBBtn color=\"deep-purple\" onClick={() => props.resetWifi()}>\n        Reset Wifis\n      </MDBBtn>\n    </div>\n  );\n};\n\nexport default SimulationOptions;\n","const routers = \n        [{\n            'name': 'PDSB-ADMIN', \n            'color': 'red',\n            'status': true,\n            'lat': 43.53885796212106, \n            'lng': -79.66675600122652\n        }, {\n            'name': 'PDSB-MEDIA',\n            'color': 'Aquamarine',\n            'status': true,\n            'lat': 43.53885822401717, \n            'lng': -79.66675319908991\n        }, {\n            'name': 'PDSB-WiFi', \n            'color': 'BlueViolet',\n            'status': true,\n            'lat': 43.53885925408986, \n            'lng': -79.66676499293197\n        }, {\n            'name': 'PDSB-GUEST',\n            'color': 'Orange', \n            'status': true,\n            'lat': 43.5388600450642, \n            'lng': -79.66676126215748\n        }, {\n            'name': 'NETGEAR68', \n            'color': 'Purple',\n            'status': true,\n            'lat': 43.5387133, \n            'lng': -79.66787195\n        }, {\n            'name': 'Wireless2', \n            'color': 'Green',\n            'status': true,\n            'lat': 43.5389861, \n            'lng': -79.6658873\n        }, {\n            'name': 'TPGuest', \n            'color': 'Lime',\n            'status': true,\n            'lat': 43.53898610000001, \n            'lng': -79.6658873\n        }, {\n            'name': 'Hotspot2E86', \n            'color': 'DeepPink',\n            'status': true,\n            'lat': 43.5387932, \n            'lng': -79.6673721\n        }, {\n            'name': 'HaloCam-2a0ecf', \n            'color': 'Yellow',\n            'status': true,\n            'lat': 43.5387932, \n            'lng': -79.6673721\n        }, {\n            'name': 'LG Stylo 2 Plus_9586', \n            'color': 'BlueViolet',\n            'status': true,\n            'lat': 43.53884215909091, \n            'lng': -79.66697206136364\n        }];\n        \n        export default routers;","import React from \"react\";\nimport \"../styles/App.css\";\nimport LeafletMap from \"./LeafletMap\";\nimport RouterPanel from \"./RouterPanel\";\nimport SimulationOptions from \"./SimulationOptions\";\nimport { MDBIcon } from \"mdbreact\";\nimport routers from \"../routersList\";\nimport { clone } from \"../utils\";\n\nconst App = () => {\n  const getRandom = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  const patrolInitialPosition = {\n    status: true,\n    lat: 43.5387,\n    lng: -79.666,\n    direction: 0, //   0->east, 1->north, 2->weast, 3->south\n    step: 14\n  };\n\n  const intruderPosition = () => {\n    const target = routers[Math.floor(getRandom(0, 10))];\n    return {\n      name: target.name,\n      color: target.color,\n      status: false,\n      lat: getRandom(43.5389, 43.53923),\n      lng: getRandom(-79.667872, -79.6658873),\n      direction: 2, //   0->east, 1->north, 2->weast, 3->south\n      step: 14\n    };\n  };\n\n  const center = [43.53885796212106, -79.66675600122652];\n\n  const stepCounter = target => {\n    let stepCounter = target.step;\n    let patrolDirection = target.direction;\n    if (stepCounter > 0) {\n      stepCounter = stepCounter - 1;\n      return { step: stepCounter, direction: patrolDirection };\n    } else {\n      patrolDirection = patrolDirection + 1;\n      if (patrolDirection % 2 === 0) {\n        // Mississauga is way too North, I had to adjust\n        stepCounter = 14; // the step because lat!=lgn near the polos\n      } else {\n        stepCounter = 5; // Just 5 steps when walking on vertical.\n      }\n      return { step: stepCounter, direction: patrolDirection };\n    }\n  };\n\n  const [showSimulationOptions, setShowSimulationOptions] = React.useState(\n    true\n  );\n  const [patrol, setPatrol] = React.useState(patrolInitialPosition);\n  const [intruder, setIntruder] = React.useState(intruderPosition());\n  const [showRadius, setShowRadius] = React.useState(false);\n  const [cloned, setCloned] = React.useState(\"\");\n\n  const toogleShowRadius = () => {\n    setShowRadius(!showRadius);\n  };\n\n  const toogleIntruder = () => {\n    let newIntruder = intruderPosition();\n    newIntruder.status = !intruder.status;\n    setIntruder(newIntruder);\n  };\n\n  const toogleSimulationOptions = () => {\n    setShowSimulationOptions(!showSimulationOptions);\n  };\n\n  const buttonColor = () => {\n    return showSimulationOptions ? \"amber-text\" : \"grey-text\";\n  };\n\n  const updatePosition = target => {\n    let newTarget = {};\n    switch (target.direction % 4) {\n      case 0:\n        newTarget.lat = target.lat;\n        newTarget.lng = target.lng - 0.0001;\n        break;\n      case 1:\n        newTarget.lat = target.lat + 0.0001;\n        newTarget.lng = target.lng;\n        break;\n      case 2:\n        newTarget.lat = target.lat;\n        newTarget.lng = target.lng + 0.0001;\n        break;\n      case 3:\n        newTarget.lat = target.lat - 0.0001;\n        newTarget.lng = target.lng;\n        break;\n      default:\n        break;\n    }\n    newTarget = { ...newTarget, ...stepCounter(target) };\n    return newTarget;\n  };\n\n  const updatePatrolPosition = () => {\n    setPatrol(updatePosition(patrol));\n  };\n\n  // eslint-disable-next-line\n  const updateIntruderPosition = () => {\n    setIntruder(updatePosition(intruder));\n  };\n\n  const update = () => {\n    updatePatrolPosition();\n  };\n\n  const toRadians = degrees => {\n    var pi = Math.PI;\n    return degrees * (pi / 180);\n  };\n\n  const distance = (position1, position2) => {\n    var R = 6371e3; // metres\n    var lat1 = toRadians(position1.lat);\n    var lat2 = toRadians(position2.lat);\n    var latDiff = toRadians(position2.lat - position1.lat);\n    var lngDiff = toRadians(position2.lng - position1.lng);\n    var a =\n      Math.sin(latDiff / 2) * Math.sin(latDiff / 2) +\n      Math.cos(lat1) *\n        Math.cos(lat2) *\n        Math.sin(lngDiff / 2) *\n        Math.sin(lngDiff / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  };\n\n  setTimeout(update, 1000);\n\n  const allSignals = () => {\n    let allSignals = clone(routers);\n    intruder.status && allSignals.push(intruder);\n    return allSignals;\n  };\n\n  const getRouterPosition = name => {\n    for (let key in routers) {\n      const router = routers[key];\n      if (router.name === name) {\n        return {\n          lat: router.lat,\n          lng: router.lng\n        };\n      }\n    }\n  };\n\n  const checkWifi = () => {\n    const signals = allSignals();\n    for (let key in signals) {\n      const listenNow = signals[key];\n      const signalPosition = { lat: listenNow.lat, lng: listenNow.lng };\n      const routerPosition = getRouterPosition(listenNow.name);\n      let measuredDistance = distance(patrol, signalPosition);\n      let routerDistance = distance(patrol, routerPosition);\n      if (\n        cloned === \"\" &&\n        measuredDistance < 30 &&\n        measuredDistance !== routerDistance\n      ) {\n        setCloned(listenNow.name);\n      }\n    }\n  };\n\n  const display = () => {\n    return showSimulationOptions ? \"Show\" : \"Hide\";\n  };\n\n  const resetWifi = () => {\n    setCloned(\"\");\n  };\n\n  const alarm = () => {\n    return cloned !== '' ? 'alarm-on' : 'alarm-off';\n  }\n\n  checkWifi();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MDBIcon icon=\"wifi\" size=\"4x\" className=\"amber-text\" />\n        <div className=\"App-header-title\">\n          Wifi Patrol\n        </div>\n        <MDBIcon\n          icon=\"bars\"\n          size=\"4x\"\n          className={buttonColor()}\n          onClick={() => toogleSimulationOptions()}\n        />\n      </header>\n      <div className={alarm()}>\n        {`Man in the middle attack detected in router ${cloned}`}\n        </div>\n      <div className=\"Body\">\n        <RouterPanel\n          className=\"RouterPanel\"\n          routers={routers}\n          cloned={cloned}\n        />\n          <LeafletMap\n            center={center}\n            routers={routers}\n            patrol={patrol}\n            intruder={intruder}\n            showRadius={showRadius}\n          />\n        <SimulationOptions\n          className={display()}\n          toogleShowRadius={toogleShowRadius}\n          toogleIntruder={toogleIntruder}\n          resetWifi={resetWifi}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export function clone(obj) {\n    let copy;\n    // Handle the 3 simple types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n    // Handle Date\n    if (obj instanceof Date) {\n        copy = new Date();\n        copy.setTime(obj.getTime());\n        return copy;\n    }\n    // Handle Array\n    if (obj instanceof Array) {\n        copy = [];\n        for (let i = 0, len = obj.length; i < len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        copy = {};\n        for (let attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './compopnents/App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}