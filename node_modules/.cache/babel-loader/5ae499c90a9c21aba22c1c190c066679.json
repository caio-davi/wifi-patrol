{"ast":null,"code":"import _objectSpread from \"/home/caio/workspace/wp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/caio/workspace/wp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/caio/workspace/wp/src/compopnents/App.jsx\";\nimport React from \"react\";\nimport \"../styles/App.css\";\nimport LeafletMap from \"./LeafletMap\";\nimport RouterPanel from \"./RouterPanel\";\nimport SimulationOptions from \"./SimulationOptions\";\nimport { MDBIcon } from \"mdbreact\";\nimport routers from \"../routersList\";\nimport { clone } from \"../utils\";\n\nconst App = () => {\n  const patrolInitialPosition = {\n    status: true,\n    lat: 43.5387,\n    lng: -79.666,\n    direction: 0,\n    //   0->east, 1->north, 2->weast, 3->south\n    step: 14,\n    wifi: \"none\"\n  };\n  const intruderInitialPosition = {\n    status: false,\n    lat: 43.5392,\n    lng: -79.6675,\n    direction: 2,\n    //   0->east, 1->north, 2->weast, 3->south\n    step: 14\n  };\n  const center = [43.53885796212106, -79.66675600122652];\n\n  const stepCounter = target => {\n    let stepCounter = target.step;\n    let patrolDirection = target.direction;\n\n    if (stepCounter > 0) {\n      stepCounter = stepCounter - 1;\n      return {\n        step: stepCounter,\n        direction: patrolDirection\n      };\n    } else {\n      patrolDirection = patrolDirection + 1;\n\n      if (patrolDirection % 2 === 0) {\n        // Mississauga is way too North, I had to adjust\n        stepCounter = 14; // the step because lat!=lgn near the polos\n      } else {\n        stepCounter = 5; // Just 5 steps when walking on vertical.\n      }\n\n      return {\n        step: stepCounter,\n        direction: patrolDirection\n      };\n    }\n  };\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        showSimulationOptions = _React$useState2[0],\n        setShowSimulationOptions = _React$useState2[1];\n\n  const _React$useState3 = React.useState(patrolInitialPosition),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        patrol = _React$useState4[0],\n        setPatrol = _React$useState4[1];\n\n  const _React$useState5 = React.useState(intruderInitialPosition),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        intruder = _React$useState6[0],\n        setIntruder = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        showRadius = _React$useState8[0],\n        setShowRadius = _React$useState8[1];\n\n  const toogleShowRadius = () => {\n    setShowRadius(!showRadius);\n  };\n\n  const toogleIntruder = () => {\n    let newIntruder = clone(intruder);\n    newIntruder.status = !intruder.status;\n    setIntruder(newIntruder);\n  };\n\n  const toogleSimulationOptions = () => {\n    setShowSimulationOptions(!showSimulationOptions);\n  };\n\n  const buttonColor = () => {\n    return showSimulationOptions ? \"amber-text\" : \"grey-text\";\n  };\n\n  const updatePosition = target => {\n    let newTarget = {};\n\n    switch (target.direction % 4) {\n      case 0:\n        newTarget.lat = target.lat;\n        newTarget.lng = target.lng - 0.0001;\n        break;\n\n      case 1:\n        newTarget.lat = target.lat + 0.0001;\n        newTarget.lng = target.lng;\n        break;\n\n      case 2:\n        newTarget.lat = target.lat;\n        newTarget.lng = target.lng + 0.0001;\n        break;\n\n      case 3:\n        newTarget.lat = target.lat - 0.0001;\n        newTarget.lng = target.lng;\n        break;\n\n      default:\n        break;\n    }\n\n    newTarget = _objectSpread({}, newTarget, {}, stepCounter(target));\n    return newTarget;\n  };\n\n  const updatePatrolPosition = () => {\n    setPatrol(updatePosition(patrol));\n  }; // eslint-disable-next-line\n\n\n  const updateIntruderPosition = () => {\n    setIntruder(updatePosition(intruder));\n  };\n\n  const update = () => {\n    updatePatrolPosition();\n  };\n\n  const toRadians = degrees => {\n    var pi = Math.PI;\n    return degrees * (pi / 180);\n  };\n\n  const distance = (position1, position2) => {\n    var R = 6371e3; // metres\n\n    var lat1 = toRadians(position1.lat);\n    var lat2 = toRadians(position2.lat);\n    var latDiff = toRadians(position2.lat - position1.lat);\n    var lngDiff = toRadians(position2.lng - position1.lng);\n    var a = Math.sin(latDiff / 2) * Math.sin(latDiff / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(lngDiff / 2) * Math.sin(lngDiff / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  setTimeout(update, 1000);\n\n  const display = () => {\n    return showSimulationOptions ? \"Show\" : \"Hide\";\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(MDBIcon, {\n    icon: \"wifi\",\n    size: \"4x\",\n    className: \"amber-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(MDBIcon, {\n    icon: \"bars\",\n    size: \"4x\",\n    className: buttonColor(),\n    onClick: () => toogleSimulationOptions(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(RouterPanel, {\n    className: \"RouterPanel\",\n    routers: routers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(LeafletMap, {\n    center: center,\n    routers: routers,\n    patrol: patrol,\n    intruder: intruder,\n    showRadius: showRadius,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(SimulationOptions, {\n    className: display(),\n    toogleShowRadius: toogleShowRadius,\n    toogleIntruder: toogleIntruder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/caio/workspace/wp/src/compopnents/App.jsx"],"names":["React","LeafletMap","RouterPanel","SimulationOptions","MDBIcon","routers","clone","App","patrolInitialPosition","status","lat","lng","direction","step","wifi","intruderInitialPosition","center","stepCounter","target","patrolDirection","useState","showSimulationOptions","setShowSimulationOptions","patrol","setPatrol","intruder","setIntruder","showRadius","setShowRadius","toogleShowRadius","toogleIntruder","newIntruder","toogleSimulationOptions","buttonColor","updatePosition","newTarget","updatePatrolPosition","updateIntruderPosition","update","toRadians","degrees","pi","Math","PI","distance","position1","position2","R","lat1","lat2","latDiff","lngDiff","a","sin","cos","c","atan2","sqrt","setTimeout","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/App.css\";\nimport LeafletMap from \"./LeafletMap\";\nimport RouterPanel from \"./RouterPanel\";\nimport SimulationOptions from \"./SimulationOptions\";\nimport { MDBIcon } from \"mdbreact\";\nimport routers from \"../routersList\";\nimport { clone } from \"../utils\";\n\nconst App = () => {\n  const patrolInitialPosition = {\n    status: true,\n    lat: 43.5387,\n    lng: -79.666,\n    direction: 0, //   0->east, 1->north, 2->weast, 3->south\n    step: 14,\n    wifi: \"none\"\n  };\n\n  const intruderInitialPosition = {\n    status: false,\n    lat: 43.5392,\n    lng: -79.6675,\n    direction: 2, //   0->east, 1->north, 2->weast, 3->south\n    step: 14\n  };\n\n  const center = [43.53885796212106, -79.66675600122652];\n\n  const stepCounter = target => {\n    let stepCounter = target.step;\n    let patrolDirection = target.direction;\n    if (stepCounter > 0) {\n      stepCounter = stepCounter - 1;\n      return { step: stepCounter, direction: patrolDirection };\n    } else {\n      patrolDirection = patrolDirection + 1;\n      if (patrolDirection % 2 === 0) {\n        // Mississauga is way too North, I had to adjust\n        stepCounter = 14; // the step because lat!=lgn near the polos\n      } else {\n        stepCounter = 5; // Just 5 steps when walking on vertical.\n      }\n      return { step: stepCounter, direction: patrolDirection };\n    }\n  };\n\n  const [showSimulationOptions, setShowSimulationOptions] = React.useState(\n    true\n  );\n  const [patrol, setPatrol] = React.useState(patrolInitialPosition);\n  const [intruder, setIntruder] = React.useState(intruderInitialPosition);\n  const [showRadius, setShowRadius] = React.useState(false);\n\n  const toogleShowRadius = () => {\n    setShowRadius(!showRadius);\n  };\n\n  const toogleIntruder = () => {\n    let newIntruder = clone(intruder);\n    newIntruder.status = !intruder.status;\n    setIntruder(newIntruder);\n  };\n\n  const toogleSimulationOptions = () => {\n    setShowSimulationOptions(!showSimulationOptions);\n  };\n\n  const buttonColor = () => {\n    return showSimulationOptions ? \"amber-text\" : \"grey-text\";\n  };\n\n  const updatePosition = target => {\n    let newTarget = {};\n    switch (target.direction % 4) {\n      case 0:\n        newTarget.lat = target.lat;\n        newTarget.lng = target.lng - 0.0001;\n        break;\n      case 1:\n        newTarget.lat = target.lat + 0.0001;\n        newTarget.lng = target.lng;\n        break;\n      case 2:\n        newTarget.lat = target.lat;\n        newTarget.lng = target.lng + 0.0001;\n        break;\n      case 3:\n        newTarget.lat = target.lat - 0.0001;\n        newTarget.lng = target.lng;\n        break;\n      default:\n        break;\n    }\n    newTarget = { ...newTarget, ...stepCounter(target) };\n    return newTarget;\n  };\n\n  const updatePatrolPosition = () => {\n    setPatrol(updatePosition(patrol));\n  };\n\n  // eslint-disable-next-line\n  const updateIntruderPosition = () => {\n    setIntruder(updatePosition(intruder));\n  };\n\n  const update = () => {\n    updatePatrolPosition();\n  };\n\n  const toRadians = degrees => {\n    var pi = Math.PI;\n    return degrees * (pi / 180);\n  };\n\n  const distance = (position1, position2) => {\n    var R = 6371e3; // metres\n    var lat1 = toRadians(position1.lat);\n    var lat2 = toRadians(position2.lat);\n    var latDiff = toRadians(position2.lat - position1.lat);\n    var lngDiff = toRadians(position2.lng - position1.lng);\n    var a =\n      Math.sin(latDiff / 2) * Math.sin(latDiff / 2) +\n      Math.cos(lat1) *\n        Math.cos(lat2) *\n        Math.sin(lngDiff / 2) *\n        Math.sin(lngDiff / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  };\n\n  setTimeout(update, 1000);\n\n  const display = () => {\n    return showSimulationOptions ? \"Show\" : \"Hide\";\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MDBIcon icon=\"wifi\" size=\"4x\" className=\"amber-text\" />\n        <MDBIcon\n          icon=\"bars\"\n          size=\"4x\"\n          className={buttonColor()}\n          onClick={() => toogleSimulationOptions()}\n        />\n      </header>\n      <div className=\"Body\">\n        <RouterPanel className=\"RouterPanel\" routers={routers} />\n        <LeafletMap\n          center={center}\n          routers={routers}\n          patrol={patrol}\n          intruder={intruder}\n          showRadius={showRadius}\n        />\n        <SimulationOptions\n          className={display()}\n          toogleShowRadius={toogleShowRadius}\n          toogleIntruder={toogleIntruder}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}